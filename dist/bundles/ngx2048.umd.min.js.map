{"version":3,"file":"ngx2048.umd.min.js","sources":["~/ngx2048/src/app/ng2048/game.service.ts","~/ngx2048/src/app/ng2048/game/game.component.ts","~/ngx2048/src/app/ng2048/ng2048.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nexport class GameService {\nprivate defaultConfig = {\n    grid: 4, // no of grid to show\n    touch: true, // touch support\n    controls: false, // manual button control\n    keys: true, // arrow keys support\n    themeControl: true, // change theme drop-down\n    scoreIndicator: true, // show current score\n    highScore: true, // remember high score\n    rememberState: true, // use local storage for state presistense\n    theme: 'dark' // current theme\n  };\nprivate SUPPORTED_THEMES: string[] = ['dark', 'colorful' ];\nprivate STORAGE_NAME = 'app_2048_storage';\nprivate highScore: number;\nprivate gameState = [];\nprivate score: number;\nprivate lastMoveDetails: any = {};\nconstructor() { \n    this.init();\n  }\n/**\n * @return {?}\n */\npublic test() {\n    // this.init();\n    // console.log('after init');\n    // this.debug();\n    // this.changeState('LEFT');\n    // console.log('after left');\n    // this.debug();\n    // this.setRandomNoPos();\n    // console.log('after new elem');\n    // this.debug();\n    // this.changeState('LEFT');\n    // console.log('after left again');\n    // this.debug();\n    // this.setRandomNoPos();\n    // console.log('after new elem again');\n    // this.debug();\n  }\n/**\n * for print debug display\n * @return {?}\n */\npublic debug() {\n    let /** @type {?} */ s = [];\n    s = this.gameState.map(x => {\n      return x.join(' | ');\n    });\n    console.log('----------------------', new Date().getTime());\n    let /** @type {?} */ y = 0;\n    s.forEach(x => {\n      console.log('', y , ' ||', x);\n      y++;\n    });\n    console.log('----------------------');\n  }\n/**\n * init the game, check localstorage if config permit\n * otherwise start a fresh game\n * @return {?}\n */\npublic init() {\n    const /** @type {?} */ st = this.getState();\n    this.lastMoveDetails = {};\n    if (st.gameState && this.defaultConfig.rememberState) {\n      this.gameState = st.gameState;\n      this.score = st.score;\n      this.highScore = st.highScore;\n      this.defaultConfig = st.config;\n      this.checkDeadlock();\n    } else {\n      this.newGame();\n    }\n  }\n/**\n * @return {?}\n */\npublic newGame() {\n    this.lastMoveDetails = {};\n    this.gameState = [];\n    const /** @type {?} */ size = this.defaultConfig.grid;\n    for (let /** @type {?} */ i = 0; i < size; i++) {\n      let /** @type {?} */ arr = [];\n      for (let /** @type {?} */ j = 0; j < size; j++ ) { arr.push(0); }\n      this.gameState.push(arr);\n    }\n    this.highScore = this.highScore == undefined ? 0 : this.highScore;\n    this.score = 0;\n    this.setRandomNoPos();\n    this.setRandomNoPos();\n    this.storeGameState(this.gameState);\n    // this.saveHighScore(this.highScore);\n    this.saveScore(this.score);\n  }\n/**\n * Set a random position in the state with a random number,\n * return true if success, false otherwise. If false no such empty \n * block available, that means game ends.\n * @return {?}\n */\npublic setRandomNoPos() {\n    let /** @type {?} */ emptyPositions = [];\n    for (let /** @type {?} */ i = 0; i < this.gameState.length; i++) {\n      for (let /** @type {?} */ j = 0; j < this.gameState[i].length; j++) {\n        if (this.gameState[i][j] === 0) {\n          emptyPositions.push({i: i, j: j});\n        }\n      }\n    }\n    if (emptyPositions.length) {\n      const /** @type {?} */ randPos = emptyPositions[Math.floor(Math.random() * emptyPositions.length)];\n      const /** @type {?} */ randNo = Math.random() * 100 > 80 ? 4 : 2;\n      this.lastMoveDetails.posAdded = randPos;\n      this.lastMoveDetails.posLeft = emptyPositions.length - 1;\n      this.gameState[randPos.i][randPos.j] = randNo;\n    } else {\n      this.lastMoveDetails.posLeft = 0;\n      return false;\n    }\n    this.storeGameState(this.gameState);\n  }\n/**\n * @return {?}\n */\npublic getLastMoveDetails() {\n    return this.lastMoveDetails;\n  }\n/**\n * @param {?} theme\n * @return {?}\n */\npublic changeTheme(theme: string) {\n    this.defaultConfig.theme = this.SUPPORTED_THEMES.indexOf(theme) >= 0 ? theme: this.defaultConfig.theme;\n    this.saveConfig(this.defaultConfig);\n  }\n/**\n * change the game state according the action\n * @param {?} direction direction of the operation, [LEFT, RIGHT, UP, DOWN]\n * @return {?}\n */\npublic changeState(direction) {\n    switch (direction) {\n      /**\n       * from right to left\n       * will stack from 0, to last\n       */\n      case 'LEFT':\n        this.gameState = this.moveLeft(this.gameState);\n        break;\n      /**\n       * from left to right\n       * will stack from last, to 0\n       */\n      case 'RIGHT':\n      this.gameState = this.moveRight(this.gameState);\n        break;\n      /**\n       * from down to up\n       * will stack from 0, to bottom\n       */\n      case 'UP':\n        let /** @type {?} */ state = this.getCopyState();\n        state = this.transpose(state);\n        state = this.moveLeft(state);\n        this.gameState = this.transpose(state);\n        break;\n      /**\n       * from up to down\n       * will stack from bottom, to 0\n       */\n      case 'DOWN':\n        let /** @type {?} */ stater = this.getCopyState();\n        stater = this.transpose(stater);\n        stater = this.moveRight(stater);\n        this.gameState = this.transpose(stater);\n        break;\n    }\n    this.storeGameState(this.gameState);\n    this.checkDeadlock();\n  }\n/**\n * Get current config\n * @return {?}\n */\npublic getConfig() {\n    return this.defaultConfig;\n  }\n/**\n * Get all supported themes\n * @return {?}\n */\npublic getAllThemes() {\n    return this.SUPPORTED_THEMES;\n  }\n/**\n * Save the game state, if config permit save to localstorage\n * @param {?} gameState 2d representation of the game\n * @return {?}\n */\npublic storeGameState(gameState: any) {\n    this.gameState = gameState;\n    if (this.defaultConfig.rememberState) {\n      // tslint:disable-next-line:prefer-const\n      let /** @type {?} */ currentState = this.getState();\n      currentState.gameState = gameState;\n      this.saveState(currentState);\n    }\n  }\n/**\n * get game 2d array representation\n * @return {?}\n */\npublic getGameState() {\n    return this.gameState;\n  }\n/**\n * get config object\n * @param {?} config game configuration\n * @return {?}\n */\npublic saveConfig(config) {\n    this.mergeConfig(config);\n\n    if (this.defaultConfig.rememberState) {\n      // tslint:disable-next-line:prefer-const\n      let /** @type {?} */ st = this.getState();\n      st.config = this.defaultConfig;\n      this.saveState(st);\n    }\n  }\n/**\n * get high score\n * @return {?}\n */\npublic getHighscore() {\n    return this.highScore;\n  }\n/**\n * save high score, if config permit save in localstorage\n * @param {?} score high score\n * @return {?}\n */\npublic saveHighScore(score: number) {\n    this.highScore = score;\n    if (this.defaultConfig.rememberState) {\n      // tslint:disable-next-line:prefer-const\n      let /** @type {?} */ st = this.getState();\n      st.highScore = score;\n      this.saveState(st);\n    }\n  }\n/**\n * delete high score, set to 0\n * @return {?}\n */\npublic deleteHighScore() {\n    this.highScore = 0;\n    if (this.defaultConfig.rememberState) {\n      // tslint:disable-next-line:prefer-const\n      let /** @type {?} */ st = this.getState();\n      st.highScore = 0;\n      this.saveState(st);\n    }\n  }\n/**\n * get current score\n * @return {?}\n */\npublic getScore() {\n    return this.score;\n  }\n/**\n * Save score, if config permit save in localstorage\n * @param {?} score current score\n * @return {?}\n */\npublic saveScore(score: number) {\n    this.score = score;\n\n    if(this.score > this.highScore) {\n      this.saveHighScore(this.score);\n    }\n\n    if (this.defaultConfig.rememberState) {\n      // tslint:disable-next-line:prefer-const\n      let /** @type {?} */ st = this.getState();\n      st.score = score;\n      this.saveState(st);\n    }\n  }\n/**\n * delete current score\n * @return {?}\n */\npublic deleteScore() {\n    this.score = 0;\n    if (this.defaultConfig.rememberState) {\n      // tslint:disable-next-line:prefer-const\n      let /** @type {?} */ st = this.getState();\n      st.score = 0;\n      this.saveState(st);\n    }\n  }\n/**\n * Transpose a given array, return a new one\n * @param {?} m an array\n * @return {?}\n */\nprivate transpose(m) {\n    // tslint:disable-next-line:no-shadowed-variable\n    return m[0].map((x, i) => m.map(x => x[i]));\n  }\n/**\n * shallow copy the game state\n * @return {?}\n */\nprivate getCopyState() {\n    let /** @type {?} */ arr = [];\n\n    arr = this.gameState.map(x => x.map(y => y));\n\n    return arr;\n  }\n/**\n * Move the game array to left\n * @param {?} state the 2d array representation of the game\n * @return {?}\n */\nprivate moveLeft(state) {\n    let /** @type {?} */ myState = [];\n    state.forEach(x => {\n      myState.push(x.map(y => y));\n    })\n    let /** @type {?} */ noOfMoves = 0;\n    let /** @type {?} */ score = this.getScore() || 0;\n    for (let /** @type {?} */ i = 0; i < myState.length; i++) {\n      /**\n       * myState[i] contains each row\n       */\n      for (let /** @type {?} */ j = 0; j < myState[i].length; j++) {\n        let /** @type {?} */ merged = false;\n        let /** @type {?} */ pulled = false;\n        for (let /** @type {?} */ k = j + 1; k < myState[i].length; k++) {\n          if (merged) { break; }\n          if (myState[i][j] === 0 && myState[i][k] !== 0) {\n            myState[i][j] = myState[i][k];\n            myState[i][k] = 0;\n            pulled = true;\n            noOfMoves++;\n            continue;\n          }\n          if (myState[i][j] === myState[i][k] && myState[i][k] !== 0) {\n            myState[i][j] *= 2;\n            myState[i][k] = 0;\n            score += myState[i][j];\n            merged = true;\n            noOfMoves++;\n            continue;\n          }\n          if (myState[i][j] !== 0 && myState[i][k] !==0) {\n            break;\n          }\n        }\n      }\n    }\n    this.saveScore(score);\n    this.lastMoveDetails.moves = noOfMoves;\n    return myState;\n  }\n/**\n * @return {?}\n */\nprivate checkDeadlock() {\n    if (this.lastMoveDetails && this.lastMoveDetails.posLeft) {\n      this.lastMoveDetails.deadlock = false;\n      return;\n    }\n/**\n * check row wise\n */\nlet found = false;\n    for (let /** @type {?} */ i = 0; i < this.gameState.length; i++) {\n      for (let /** @type {?} */ j = 0; j < this.gameState[i].length - 1; j++) {\n        if (this.gameState[i][j] === this.gameState[i][j + 1]) {\n          found = true;\n        }\n      }\n    }\n    if (found) {\n      this.lastMoveDetails.deadlock = false;\n      return;\n    }\n\n    /**\n     * check column wise\n     */\n    for (let /** @type {?} */ i = 0; i < this.gameState.length - 1; i++) {\n      for (let /** @type {?} */ j = 0; j < this.gameState[i].length; j++) {\n        if (this.gameState[i][j] === this.gameState[i + 1][j]) {\n          found = true;\n        }\n      }\n    }\n    if (found) {\n      this.lastMoveDetails.deadlock = false;\n    } else {\n      this.lastMoveDetails.deadlock = true;\n    }\n    return;\n  }\n/**\n * Move the game array to right\n * @param {?} state the 2d array representation of the game\n * @return {?}\n */\nprivate moveRight(state) {\n    let /** @type {?} */ myState = [];\n    state.forEach(x => {\n      myState.push(x.map(y => y));\n    })\n    let /** @type {?} */ noOfMoves = 0;\n    let /** @type {?} */ score = this.getScore() || 0;\n    for (let /** @type {?} */ i = 0; i < myState.length; i++) {\n      /**\n       * myState[i] contains each row\n       */\n      for (let /** @type {?} */ j = myState[i].length - 1; j >= 0; j--) {\n        let /** @type {?} */ merged = false;\n        let /** @type {?} */ pulled = false;\n        for (let /** @type {?} */ k = j - 1; k >= 0; k--) {\n          if (merged) { break; }\n          if (myState[i][j] === 0 && myState[i][k] !== 0) {\n            myState[i][j] = myState[i][k];\n            myState[i][k] = 0;\n            pulled = true;\n            noOfMoves++;\n            continue;\n          }\n          if (myState[i][j] === myState[i][k] && myState[i][k] !== 0) {\n            myState[i][j] *= 2;\n            myState[i][k] = 0;\n            merged = true;\n            noOfMoves++;\n            score += myState[i][j];\n            continue;\n          }\n          if (myState[i][j] !== 0 && myState[i][k] !==0) {\n            break;\n          }\n        }\n      }\n    }\n    this.saveScore(score);\n    this.lastMoveDetails.moves = noOfMoves;\n    return myState;\n  }\n/**\n * Merge config with default one\n * @param {?} config the config\n * @return {?}\n */\nprivate mergeConfig(config) {\n    if (!config) { return; }\n    const /** @type {?} */ keys = Object.keys(config);\n    keys.forEach((val) => {\n      this.defaultConfig[val] = config[val];\n    });\n  }\n/**\n * get the current state (total game state including scores)\n * @return {?}\n */\nprivate getState() {\n    let /** @type {?} */ currentState: any = localStorage.getItem(this.STORAGE_NAME);\n    if (!currentState) {\n      currentState = {};\n    } else {\n      try {\n        currentState  = JSON.parse(currentState);\n      } catch ( /** @type {?} */er) {}\n    }\n    return currentState;\n  }\n/**\n * Save the total game state\n * @param {?} state the total game state\n * @return {?}\n */\nprivate saveState(state: any) {\n    localStorage.setItem(this.STORAGE_NAME, JSON.stringify(state));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GameService_tsickle_Closure_declarations() {\n/** @type {?} */\nGameService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGameService.ctorParameters;\n/** @type {?} */\nGameService.prototype.defaultConfig;\n/** @type {?} */\nGameService.prototype.SUPPORTED_THEMES;\n/** @type {?} */\nGameService.prototype.STORAGE_NAME;\n/** @type {?} */\nGameService.prototype.highScore;\n/** @type {?} */\nGameService.prototype.gameState;\n/** @type {?} */\nGameService.prototype.score;\n/** @type {?} */\nGameService.prototype.lastMoveDetails;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, \n         OnInit, \n         Input, \n         Output, \n         AfterViewInit, \n         ChangeDetectorRef, \n         HostListener,\n         ViewChild,\n         ElementRef \n       } from '@angular/core';\nimport { GameService } from '../game.service';\nvar /** @type {?} */ html2canvas = require(\"html2canvas\");\nexport class GameComponent implements OnInit, AfterViewInit {\nprivate _config: any;\n   el:ElementRef;\n/**\n * @return {?}\n */\nget config() {\n    return this._config;\n  }\n/**\n * @param {?} val\n * @return {?}\n */\nset config(val) {\n    this._config = val;\n    this.gameService.saveConfig(this.config);\n  }\n\n  SWIPE_ACTION = { LEFT: 'LEFT', RIGHT: 'RIGHT', UP: 'UP', DOWN: 'DOWN' };\n\n  gameState: any = [];\n  defaultConfig: any = {};\n  actionAllowed = false;\n  lastAction: any = {};\n  score: number = 0;\n  highScore: number = 0;\n\n  allThemes: string[];\n/**\n * @param {?} event\n * @return {?}\n */\nhandleKeyboardEvent(event: KeyboardEvent) {\n    this.handle_key(event);\n  }\n/**\n * @param {?} gameService\n * @param {?} cdr\n */\nconstructor(\nprivate gameService: GameService,\nprivate cdr: ChangeDetectorRef\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    if (this._config) {\n      this.gameService.saveConfig(this.config);\n    }\n    this.gameService.init();\n    this.gameState = this.gameService.getGameState();\n    this.defaultConfig = this.gameService.getConfig();\n    this.actionAllowed = true;\n    this.lastAction = this.gameService.getLastMoveDetails();\n    this.score = this.gameService.getScore();\n    this.highScore = this.gameService.getHighscore();\n    this.allThemes = this.gameService.getAllThemes();\n    this.cdr.detectChanges();\n  }\n/**\n * @return {?}\n */\nnewgame() {\n    this.gameService.newGame();\n    this.gameState = this.gameService.getGameState();\n    this.defaultConfig = this.gameService.getConfig();\n    this.actionAllowed = true;\n    this.lastAction = this.gameService.getLastMoveDetails();\n    this.score = this.gameService.getScore();\n    this.highScore = this.gameService.getHighscore();\n    this.cdr.detectChanges();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandle_key(event: KeyboardEvent) {\n    if (this.defaultConfig.keys) {\n      console.log(event.code, event.key);\n      let /** @type {?} */ key = event.key.toLowerCase();\n\n      switch (key) {\n        case 'w':\n        case 'arrowup':\n          this.swipe(this.SWIPE_ACTION.UP);\n          break;\n        case 's':\n        case 'arrowdown':\n          this.swipe(this.SWIPE_ACTION.DOWN);\n          break;\n        case 'a':\n        case 'arrowleft':\n          this.swipe(this.SWIPE_ACTION.LEFT);\n          break;\n        case 'd':\n        case 'arrowright':\n          this.swipe(this.SWIPE_ACTION.RIGHT);\n          break;\n        default:\n          // do nothing\n      }\n    }\n  }\n/**\n * @return {?}\n */\nchange_theme() {\n    this.gameService.changeTheme(this.defaultConfig.theme);\n    this.defaultConfig = this.gameService.getConfig();\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nswipe_a(action: string) {\n    if (this.defaultConfig.touch) {\n      this.swipe(action);\n    }\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nswipe(action: string) {\n    if (!this.actionAllowed) {\n      return;\n    }\n    this.gameService.changeState(action);\n    this.gameState = this.gameService.getGameState();\n    this.score = this.gameService.getScore();\n    this.highScore = this.gameService.getHighscore();\n    this.cdr.detectChanges();\n    this.addNewNo();\n  }\n/**\n * @return {?}\n */\naddNewNo() {\n\n    let /** @type {?} */ lastMove = this.gameService.getLastMoveDetails();\n\n    if (lastMove.moves && lastMove.moves > 0) {\n        this.actionAllowed = false;\n        setTimeout(() => {\n          this.gameService.setRandomNoPos();\n          this.actionAllowed = true;\n          this.cdr.detectChanges();\n        }, 200);\n    }\n  }\n/**\n * @return {?}\n */\nscreenshot() {\n    let /** @type {?} */ doc: HTMLElement = this.el.nativeElement;\n    html2canvas(doc).then(canvas => {\n      var /** @type {?} */ myImage = canvas.toDataURL(\"image/png\");\n      var /** @type {?} */ link = document.createElement(\"a\");\n      link.download = `Image_2024_score_${this.score}.png`;\n      link.href = 'data: '+myImage;\n      link.click();\n    }).catch(err => {\n\n    })\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'app-game-2048',\n  template: `\n    <div class=\"game-container {{defaultConfig ? defaultConfig.theme: ''}}\" (swipeleft)=\"swipe_a(SWIPE_ACTION.LEFT)\" (swiperight)=\"swipe_a(SWIPE_ACTION.RIGHT)\" (swipeup)=\"swipe_a(SWIPE_ACTION.UP)\" (swipedown)=\"swipe_a(SWIPE_ACTION.DOWN)\">\n      <div class=\"themecontrol\" *ngIf=\"defaultConfig && defaultConfig.themeControl\">\n        <form>\n          <select name=\"theme\" [(ngModel)]=\"defaultConfig.theme\" (change)=\"change_theme()\">\n            <option *ngFor=\"let opt of allThemes\" [value]=\"opt\" [selected]=\"opt === defaultConfig.theme\" style=\"text-transform: capitalize;\">{{opt}}</option>\n          </select>\n        </form>\n      </div>\n      <div class=\"stats\" *ngIf=\"defaultConfig && defaultConfig.scoreIndicator\">\n        <div class=\"highscore\">\n          <span class=\"txt\">High Score</span>\n          <span class=\"score\">{{highScore}}</span>\n        </div>\n        <div class=\"ngame\">\n          <button (click)=\"newgame()\">New Game</button>\n        </div>\n        <div class=\"currscore\">\n          <span class=\"txt\">Score</span>\n          <span class=\"score\">{{score}}</span>\n        </div>\n      </div>\n      <div class=\"board-container\" #game>\n        <div class=\"board-row\" *ngFor=\"let row of gameState\">\n          <div class=\"board-cell {{cell == 0 ? 'zero': 'num'+cell}}\" *ngFor=\"let cell of row\">\n            <span>{{cell == 0 ? '&nbsp;': cell}}</span>\n          </div>\n        </div>\n        <div class=\"over\" *ngIf=\"lastAction && lastAction.deadlock\">\n          <div class=\"container\">\n            <div class=\"text\">Game Over</div>\n            <div class=\"btn-cnt\">\n              <button class=\"newgame\" (click)=\"newgame()\">New Game</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"control-container\" *ngIf=\"defaultConfig && defaultConfig.controls\">\n        <div class=\"btn-container\">\n            <div class=\"g_row\">\n                <button class=\"ctl-btn up\" (click)=\"swipe(SWIPE_ACTION.UP)\">&uarr;</button>\n            </div>\n            <div class=\"g_row\">\n                <button class=\"ctl-btn left\" (click)=\"swipe(SWIPE_ACTION.LEFT)\">&larr;</button>\n                <button class=\"btn-rnd\" (click)=\"screenshot()\">&#9786;</button>\n                <button class=\"ctl-btn right\" (click)=\"swipe(SWIPE_ACTION.RIGHT)\">&rarr;</button>\n            </div>\n            <div class=\"g_row\">\n                <button class=\"ctl-btn down\" (click)=\"swipe(SWIPE_ACTION.DOWN)\">&darr;</button>\n            </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .game-container {\n      width: 90%;\n      padding: 10px;\n      margin: 0 auto; }\n      .game-container .board-container {\n        position: relative;\n        -webkit-animation: MyAnimation 1s;\n                animation: MyAnimation 1s;\n        width: 100%; }\n        .game-container .board-container .board-row {\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n          .game-container .board-container .board-row .board-cell {\n            -webkit-box-flex: 1;\n                -ms-flex: auto;\n                    flex: auto;\n            min-width: 50px;\n            min-height: 70px;\n            background: #96cff5; }\n            .game-container .board-container .board-row .board-cell span {\n              display: block;\n              vertical-align: middle;\n              text-align: center;\n              margin: 34% 0; }\n        .game-container .board-container .over {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(189, 189, 189, 0.59); }\n          .game-container .board-container .over .container {\n            display: block;\n            text-align: center;\n            padding-top: 30%; }\n            .game-container .board-container .over .container .text {\n              font-size: 30px;\n              font-weight: 600;\n              color: #ffffff;\n              text-shadow: 0 0 12px #000; }\n            .game-container .board-container .over .container .btn-cnt .newgame {\n              padding: 5px;\n              margin: 5px;\n              font-size: 18px;\n              font-weight: 600;\n              -webkit-box-shadow: 0 0 12px #525252;\n                      box-shadow: 0 0 12px #525252; }\n      .game-container .control-container {\n        width: 100%;\n        text-align: center;\n        margin-top: 20px; }\n        .game-container .control-container .btn-container {\n          max-width: 70%;\n          width: auto;\n          margin: 0 auto;\n          border-radius: 50%;\n          background: #f3f3f3; }\n          .game-container .control-container .btn-container .g_row {\n            display: block;\n            width: 100%; }\n            .game-container .control-container .btn-container .g_row .ctl-btn {\n              background: #4c4c4c;\n              /* Old browsers */\n              /* FF3.6-15 */\n              /* Chrome10-25,Safari5.1-6 */\n              background: linear-gradient(135deg, #4c4c4c 0%, #595959 12%, #666666 25%, #474747 39%, #2c2c2c 50%, black 51%, #111111 60%, #2b2b2b 76%, #1c1c1c 91%, #131313 100%);\n              /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n              filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4c4c4c', endColorstr='#131313',GradientType=1 );\n              /* IE6-9 fallback on horizontal gradient */\n              outline: none;\n              min-width: 50px;\n              min-height: 50px;\n              cursor: pointer;\n              font-weight: 600;\n              font-size: 34px; }\n              .game-container .control-container .btn-container .g_row .ctl-btn:active {\n                outline: none; }\n            .game-container .control-container .btn-container .g_row .ctl-btn.up {\n              border-top-left-radius: 50%;\n              border-top-right-radius: 50%; }\n            .game-container .control-container .btn-container .g_row .ctl-btn.down {\n              border-bottom-left-radius: 50%;\n              border-bottom-right-radius: 50%; }\n            .game-container .control-container .btn-container .g_row .ctl-btn.left {\n              border-top-left-radius: 50%;\n              border-bottom-left-radius: 50%; }\n            .game-container .control-container .btn-container .g_row .ctl-btn.right {\n              border-top-right-radius: 50%;\n              border-bottom-right-radius: 50%; }\n            .game-container .control-container .btn-container .g_row .btn-rnd {\n              background: #3a3a3a;\n              outline: none;\n              color: #fff;\n              cursor: pointer;\n              font-weight: 600;\n              font-size: 34px;\n              border-radius: 20%; }\n      .game-container .stats {\n        width: 100%;\n        overflow: hidden;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-shadow: 0 0 5px #000;\n                box-shadow: 0 0 5px #000;\n        margin: 10px 0;\n        padding: 5px 0;\n        border-radius: 5px; }\n        .game-container .stats .highscore {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1;\n          padding: 0 5px; }\n          .game-container .stats .highscore .txt {\n            display: -webkit-box;\n            display: -ms-flexbox;\n            display: flex;\n            color: #000;\n            font-weight: 600;\n            text-shadow: 0px 0px 2px #e2e2e2; }\n          .game-container .stats .highscore .score {\n            display: -webkit-box;\n            display: -ms-flexbox;\n            display: flex;\n            color: #000;\n            font-weight: 600;\n            font-size: 20px;\n            border-top: 1px double #000;\n            margin: 5px 0; }\n        .game-container .stats .ngame {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1; }\n          .game-container .stats .ngame button {\n            display: -webkit-box;\n            display: -ms-flexbox;\n            display: flex;\n            display: table-cell;\n            vertical-align: middle;\n            text-align: center;\n            width: 100%;\n            line-height: 1.4;\n            font-size: 17px;\n            font-weight: 600; }\n        .game-container .stats .currscore {\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1;\n          text-align: right;\n          padding: 0 5px; }\n          .game-container .stats .currscore .txt {\n            display: block;\n            color: #000;\n            font-weight: 600;\n            text-shadow: 0px 0px 2px #e2e2e2; }\n          .game-container .stats .currscore .score {\n            display: block;\n            color: #000;\n            font-weight: 600;\n            font-size: 20px;\n            border-top: 1px double #000;\n            margin: 5px 0; }\n      .game-container .themecontrol {\n        -webkit-box-shadow: 0 0 10px rgba(136, 134, 134, 0.51);\n                box-shadow: 0 0 10px rgba(136, 134, 134, 0.51);\n        margin: 5px 0; }\n        .game-container .themecontrol select {\n          width: 100%;\n          height: 35px;\n          text-transform: capitalize;\n          font-size: 18px; }\n\n    @-webkit-keyframes MyAnimation {\n      0% {\n        padding-top: 25px; }\n      25% {\n        padding-top: 30px; }\n      50% {\n        padding-top: 10px; }\n      75% {\n        padding-top: 15px; }\n      80% {\n        padding-top: 5px; }\n      90% {\n        padding-top: 10px; }\n      100% {\n        padding-top: 0px; } }\n\n    @keyframes MyAnimation {\n      0% {\n        padding-top: 25px; }\n      25% {\n        padding-top: 30px; }\n      50% {\n        padding-top: 10px; }\n      75% {\n        padding-top: 15px; }\n      80% {\n        padding-top: 5px; }\n      90% {\n        padding-top: 10px; }\n      100% {\n        padding-top: 0px; } }\n\n    .game-container.dark .board-container {\n      background: #7b7b7b;\n      -webkit-box-shadow: 0 0 10px #989898;\n              box-shadow: 0 0 10px #989898;\n      border: 1px solid #333;\n      border-style: inset;\n      border-radius: 5px; }\n      .game-container.dark .board-container .board-row .board-cell {\n        background: #fff;\n        margin: 2px;\n        border-radius: 5px; }\n      .game-container.dark .board-container .board-row .board-cell.num2, .game-container.dark .board-container .board-row .board-cell.num256 {\n        background: #d0cbcb;\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.dark .board-container .board-row .board-cell.num4, .game-container.dark .board-container .board-row .board-cell.num512 {\n        background: #7b7b7b;\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.dark .board-container .board-row .board-cell.num8, .game-container.dark .board-container .board-row .board-cell.num1024 {\n        background: #2d2d2d;\n        color: #fff;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.dark .board-container .board-row .board-cell.num16, .game-container.dark .board-container .board-row .board-cell.num2048 {\n        background: #4c4c4c;\n        color: #fff;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000;\n        background: #4c4c4c;\n        /* Old browsers */\n        /* FF3.6-15 */\n        /* Chrome10-25,Safari5.1-6 */\n        background: linear-gradient(135deg, #4c4c4c 0%, #595959 12%, #666666 25%, #474747 39%, #2c2c2c 50%, black 51%, #111111 60%, #2b2b2b 76%, #1c1c1c 91%, #131313 100%);\n        /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4c4c4c', endColorstr='#131313',GradientType=1 );\n        /* IE6-9 fallback on horizontal gradient */ }\n      .game-container.dark .board-container .board-row .board-cell.num32, .game-container.dark .board-container .board-row .board-cell.num4096 {\n        background: #171717;\n        color: #fff;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.dark .board-container .board-row .board-cell.num64 {\n        background: #000000;\n        color: #fff;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.dark .board-container .board-row .board-cell.num128 {\n        /* FF3.6-15 */\n        /* Chrome10-25,Safari5.1-6 */\n        background: -webkit-gradient(linear, left top, right top, color-stop(44%, rgba(0, 0, 0, 0.65)), color-stop(63%, rgba(0, 0, 0, 0.36)), color-stop(87%, transparent), to(transparent));\n        background: linear-gradient(to right, rgba(0, 0, 0, 0.65) 44%, rgba(0, 0, 0, 0.36) 63%, transparent 87%, transparent 100%);\n        /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#a6000000', endColorstr='#00000000',GradientType=1 );\n        /* IE6-9 */\n        color: #fff; }\n\n    .game-container.dark .control-container .btn-container .g_row .ctl-btn {\n      color: #fff;\n      background: #4c4c4c;\n      /* Old browsers */\n      /* FF3.6-15 */\n      /* Chrome10-25,Safari5.1-6 */\n      background: linear-gradient(135deg, #4c4c4c 0%, #595959 12%, #666666 25%, #474747 39%, #2c2c2c 50%, black 51%, #111111 60%, #2b2b2b 76%, #1c1c1c 91%, #131313 100%);\n      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4c4c4c', endColorstr='#131313',GradientType=1 );\n      /* IE6-9 fallback on horizontal gradient */ }\n\n    .game-container.dark .control-container .btn-container .g_row .btn-rnd {\n      background: #4c4c4c;\n      /* Old browsers */\n      /* FF3.6-15 */\n      /* Chrome10-25,Safari5.1-6 */\n      background: linear-gradient(135deg, #4c4c4c 0%, #595959 12%, #666666 25%, #474747 39%, #2c2c2c 50%, black 51%, #111111 60%, #2b2b2b 76%, #1c1c1c 91%, #131313 100%);\n      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4c4c4c', endColorstr='#131313',GradientType=1 );\n      /* IE6-9 fallback on horizontal gradient */\n      color: #fff; }\n\n    .game-container.dark .stats {\n      background: #4c4c4c;\n      /* Old browsers */\n      /* FF3.6-15 */\n      /* Chrome10-25,Safari5.1-6 */\n      background: linear-gradient(135deg, #4c4c4c 0%, #595959 12%, #666666 25%, #474747 39%, #2c2c2c 50%, black 51%, #111111 60%, #2b2b2b 76%, #1c1c1c 91%, #131313 100%);\n      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4c4c4c', endColorstr='#131313',GradientType=1 );\n      /* IE6-9 fallback on horizontal gradient */ }\n      .game-container.dark .stats .highscore .txt {\n        color: #fff;\n        text-shadow: none; }\n      .game-container.dark .stats .highscore .score {\n        color: #fff;\n        border-top: 1px double #fff; }\n      .game-container.dark .stats .currscore .txt {\n        color: #fff;\n        text-shadow: none; }\n      .game-container.dark .stats .currscore .score {\n        color: #fff;\n        border-top: 1px double #fff; }\n\n    .game-container.colorful .board-container {\n      background-color: #a8e9ff;\n      filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#a8e9ff, endColorstr=#4a3ef0);\n      background-image: -webkit-gradient(linear, right bottom, left top, color-stop(5%, #a8e9ff), color-stop(25%, #4a3ef0), color-stop(52%, #3ef053), color-stop(80%, #ff8d00), to(#f7f734));\n      background-image: linear-gradient(right bottom, #a8e9ff 5%, #4a3ef0 25%, #3ef053 52%, #ff8d00 80%, #f7f734 100%);\n      background-image: -ms-linear-gradient(right bottom, #a8e9ff 5%, #4a3ef0 25%, #3ef053 52%, #ff8d00 80%, #f7f734 100%);\n      background-image: -webkit-gradient(linear, right bottom, left top, color-stop(5%, #a8e9ff), color-stop(25%, #4a3ef0), color-stop(52%, #3ef053), color-stop(80%, #ff8d00), color-stop(100%, #f7f734));\n      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e0f3fa', endColorstr='#b6dffd',GradientType=1 );\n      /* IE6-9 fallback on horizontal gradient */\n      -webkit-box-shadow: 0 0 10px rgba(2, 97, 97, 0.78);\n              box-shadow: 0 0 10px rgba(2, 97, 97, 0.78);\n      border: 1px solid #7977fb;\n      border-style: inset;\n      border-radius: 5px; }\n      .game-container.colorful .board-container .board-row .board-cell {\n        background-color: #ffffff;\n        margin: 2px;\n        border-radius: 5px; }\n      .game-container.colorful .board-container .board-row .board-cell.num2, .game-container.colorful .board-container .board-row .board-cell.num256 {\n        background-color: #2ef245;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#2ef245, endColorstr=#cbff70);\n        background-image: -webkit-gradient(linear, left bottom, right top, from(#2ef245), to(#cbff70));\n        background-image: linear-gradient(left bottom, #2ef245 0%, #cbff70 100%);\n        background-image: -o-linear-gradient(left bottom, #2ef245 0%, #cbff70 100%);\n        background-image: -webkit-gradient(linear, left bottom, right top, color-stop(0%, #2ef245), color-stop(100%, #cbff70));\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #fff;\n                box-shadow: 0 0 2px #fff; }\n      .game-container.colorful .board-container .board-row .board-cell.num4, .game-container.colorful .board-container .board-row .board-cell.num512 {\n        background-color: #4b2ef2;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#4b2ef2, endColorstr=#5bc4f5);\n        background-image: -webkit-gradient(linear, left bottom, right top, from(#4b2ef2), to(#5bc4f5));\n        background-image: linear-gradient(left bottom, #4b2ef2 0%, #5bc4f5 100%);\n        background-image: -o-linear-gradient(left bottom, #4b2ef2 0%, #5bc4f5 100%);\n        background-image: -webkit-gradient(linear, left bottom, right top, color-stop(0%, #4b2ef2), color-stop(100%, #5bc4f5));\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #fff;\n                box-shadow: 0 0 2px #fff; }\n      .game-container.colorful .board-container .board-row .board-cell.num8, .game-container.colorful .board-container .board-row .board-cell.num1024 {\n        background-color: #f0b222;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#f0b222, endColorstr=#4251f5);\n        background-image: linear-gradient(right bottom, #f0b222 21%, #4251f5 81%);\n        background-image: -o-linear-gradient(right bottom, #f0b222 21%, #4251f5 81%);\n        background-image: -webkit-gradient(linear, right bottom, left top, color-stop(21%, #f0b222), color-stop(81%, #4251f5));\n        color: #fff;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #fff;\n                box-shadow: 0 0 2px #fff; }\n      .game-container.colorful .board-container .board-row .board-cell.num16, .game-container.colorful .board-container .board-row .board-cell.num2048 {\n        background-color: #fc8d77;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#fc8d77, endColorstr=#a673ff);\n        background-image: -webkit-gradient(linear, right bottom, left top, from(#fc8d77), color-stop(81%, #a673ff));\n        background-image: linear-gradient(right bottom, #fc8d77 0%, #a673ff 81%);\n        background-image: -o-linear-gradient(right bottom, #fc8d77 0%, #a673ff 81%);\n        background-image: -webkit-gradient(linear, right bottom, left top, color-stop(0%, #fc8d77), color-stop(81%, #a673ff));\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.colorful .board-container .board-row .board-cell.num32, .game-container.colorful .board-container .board-row .board-cell.num4096 {\n        background-color: #ffff29;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#ffff29, endColorstr=#ff73ce);\n        background-image: -webkit-gradient(linear, right bottom, left top, from(#ffff29), color-stop(81%, #ff73ce));\n        background-image: linear-gradient(right bottom, #ffff29 0%, #ff73ce 81%);\n        background-image: -o-linear-gradient(right bottom, #ffff29 0%, #ff73ce 81%);\n        background-image: -webkit-gradient(linear, right bottom, left top, color-stop(0%, #ffff29), color-stop(81%, #ff73ce));\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.colorful .board-container .board-row .board-cell.num64 {\n        background-color: #a2a8eb;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#a2a8eb, endColorstr=#b5b5b5);\n        background-image: -webkit-gradient(linear, right bottom, left top, from(#a2a8eb), color-stop(81%, #b5b5b5));\n        background-image: linear-gradient(right bottom, #a2a8eb 0%, #b5b5b5 81%);\n        background-image: -o-linear-gradient(right bottom, #a2a8eb 0%, #b5b5b5 81%);\n        background-image: -webkit-gradient(linear, right bottom, left top, color-stop(0%, #a2a8eb), color-stop(81%, #b5b5b5));\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n      .game-container.colorful .board-container .board-row .board-cell.num128 {\n        background-color: #3d8ef2;\n        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#3d8ef2, endColorstr=#68cf5d);\n        background-image: linear-gradient(left bottom, #3d8ef2 11%, #68cf5d 51%, #f0b52e 86%);\n        background-image: -ms-linear-gradient(left bottom, #3d8ef2 11%, #68cf5d 51%, #f0b52e 86%);\n        background-image: -webkit-gradient(linear, left bottom, right top, color-stop(11%, #3d8ef2), color-stop(51%, #68cf5d), color-stop(86%, #f0b52e));\n        color: #000;\n        font-size: initial;\n        font-weight: 600;\n        -webkit-box-shadow: 0 0 2px #000;\n                box-shadow: 0 0 2px #000; }\n\n    .game-container.colorful .control-container .btn-container {\n      background-color: #80d7ff;\n      filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#80d7ff, endColorstr=#53f55b);\n      background-image: -webkit-gradient(linear, right bottom, left top, from(#80d7ff), color-stop(31%, #53f55b), color-stop(53%, #628ef5), color-stop(79%, #ccb221), to(#ff7070));\n      background-image: linear-gradient(right bottom, #80d7ff 0%, #53f55b 31%, #628ef5 53%, #ccb221 79%, #ff7070 100%);\n      background-image: -ms-linear-gradient(right bottom, #80d7ff 0%, #53f55b 31%, #628ef5 53%, #ccb221 79%, #ff7070 100%);\n      background-image: -webkit-gradient(linear, right bottom, left top, color-stop(0%, #80d7ff), color-stop(31%, #53f55b), color-stop(53%, #628ef5), color-stop(79%, #ccb221), color-stop(100%, #ff7070)); }\n      .game-container.colorful .control-container .btn-container .g_row .ctl-btn {\n        color: #000;\n        background: #b7deed;\n        /* Old browsers */\n        /* FF3.6-15 */\n        /* Chrome10-25,Safari5.1-6 */\n        background: linear-gradient(135deg, #b7deed 0%, #71ceef 50%, #21b4e2 51%, #b7deed 100%);\n        /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#b7deed', endColorstr='#b7deed',GradientType=1 );\n        /* IE6-9 fallback on horizontal gradient */ }\n      .game-container.colorful .control-container .btn-container .g_row .btn-rnd {\n        background: #b7deed;\n        /* Old browsers */\n        /* FF3.6-15 */\n        /* Chrome10-25,Safari5.1-6 */\n        background: linear-gradient(135deg, #b7deed 0%, #71ceef 50%, #21b4e2 51%, #b7deed 100%);\n        /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#b7deed', endColorstr='#b7deed',GradientType=1 );\n        /* IE6-9 fallback on horizontal gradient */\n        color: #000; }\n\n    .game-container.colorful .stats {\n      background: #ffb76b;\n      /* Old browsers */\n      /* FF3.6-15 */\n      /* Chrome10-25,Safari5.1-6 */\n      background: linear-gradient(135deg, #ffb76b 0%, #ffa73d 50%, #ff7c00 51%, #ff7f04 100%);\n      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffb76b', endColorstr='#ff7f04',GradientType=1 );\n      /* IE6-9 fallback on horizontal gradient */ }\n      .game-container.colorful .stats .highscore .txt {\n        color: #000;\n        text-shadow: none; }\n      .game-container.colorful .stats .highscore .score {\n        color: #000;\n        border-top: 1px double #000; }\n      .game-container.colorful .stats .currscore .txt {\n        color: #000;\n        text-shadow: none; }\n      .game-container.colorful .stats .currscore .score {\n        color: #000;\n        border-top: 1px double #000; }\n  `],\n  providers: [GameService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: GameService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'el': [{ type: ViewChild, args: ['game', ] },],\n'config': [{ type: Input },],\n'handleKeyboardEvent': [{ type: HostListener, args: ['document:keyup', ['$event'], ] },],\n};\n}\n\nfunction GameComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGameComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGameComponent.ctorParameters;\n/** @type {?} */\nGameComponent.propDecorators;\n/** @type {?} */\nGameComponent.prototype._config;\n/** @type {?} */\nGameComponent.prototype.el;\n/** @type {?} */\nGameComponent.prototype.SWIPE_ACTION;\n/** @type {?} */\nGameComponent.prototype.gameState;\n/** @type {?} */\nGameComponent.prototype.defaultConfig;\n/** @type {?} */\nGameComponent.prototype.actionAllowed;\n/** @type {?} */\nGameComponent.prototype.lastAction;\n/** @type {?} */\nGameComponent.prototype.score;\n/** @type {?} */\nGameComponent.prototype.highScore;\n/** @type {?} */\nGameComponent.prototype.allThemes;\n/** @type {?} */\nGameComponent.prototype.gameService;\n/** @type {?} */\nGameComponent.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GameComponent } from './game/game.component';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nexport class MyHammerConfig extends HammerGestureConfig  {\n  overrides = /** @type {?} */(( <any>{\n      'swipe': {velocity: 0.4, threshold: 20, direction: 31 } // override default settings\n  }));\n}\n\nfunction MyHammerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nMyHammerConfig.prototype.overrides;\n}\n\nexport class Ng2048Module { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [GameComponent],\n  providers: [{\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig\n  }],\n  exports: [GameComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2048Module_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2048Module.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2048Module.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["GameService","this","defaultConfig","grid","touch","controls","keys","themeControl","scoreIndicator","highScore","rememberState","theme","SUPPORTED_THEMES","STORAGE_NAME","gameState","lastMoveDetails","init","prototype","test","debug","s","map","x","join","console","log","Date","getTime","y","forEach","st","getState","score","config","checkDeadlock","newGame","size","i","arr","j","push","undefined","setRandomNoPos","storeGameState","saveScore","emptyPositions","length","posLeft","randPos","Math","floor","random","randNo","posAdded","getLastMoveDetails","changeTheme","indexOf","saveConfig","changeState","direction","moveLeft","moveRight","state","getCopyState","transpose","stater","getConfig","getAllThemes","currentState","saveState","getGameState","mergeConfig","getHighscore","saveHighScore","deleteHighScore","getScore","deleteScore","m","myState","noOfMoves","merged","k","moves","deadlock","found","_this","Object","val","localStorage","getItem","JSON","parse","er","setItem","stringify","decorators","type","Injectable","ctorParameters","html2canvas","require","GameComponent","gameService","cdr","SWIPE_ACTION","LEFT","RIGHT","UP","DOWN","actionAllowed","lastAction","defineProperty","get","_config","set","handleKeyboardEvent","event","handle_key","ngOnInit","ngAfterViewInit","allThemes","detectChanges","newgame","code","key","toLowerCase","swipe","change_theme","swipe_a","action","addNewNo","lastMove","setTimeout","screenshot","doc","el","nativeElement","then","canvas","myImage","toDataURL","link","document","createElement","download","href","click","catch","err","Component","args","selector","template","styles","providers","ChangeDetectorRef","propDecorators","ViewChild","Input","HostListener","MyHammerConfig","_super","apply","arguments","overrides","velocity","threshold","__extends","HammerGestureConfig","Ng2048Module","NgModule","imports","CommonModule","FormsModule","declarations","provide","HAMMER_GESTURE_CONFIG","useClass","exports"],"mappings":"iwBACAA,EAAA,WAkBA,SAAAA,IAdUC,KAAVC,eAFIC,KAGM,EAFNC,OAGO,EAFPC,UAGU,EAFVC,MAGM,EAFNC,cAGc,EAFdC,gBAGgB,EAFhBC,WAGW,EAFXC,eAGe,EAFfC,MAGO,QAGDV,KAAVW,kBAAuC,OAAS,YAEtCX,KAAVY,aAAyB,mBAIfZ,KAAVa,aAIUb,KAAVc,mBAPId,KAAKe,cAaNhB,EAAHiB,UAAAC,KAAG,aAqBAlB,EAAHiB,UAAAE,MAAG,WAPC,IAQIC,KAPJA,EAQInB,KAAKa,UAAUO,IAAI,SAAAC,GAPrB,OAQOA,EAAEC,KAAK,SANhBC,QAQQC,IAAI,0BAA0B,IAAIC,MAAOC,WAPjD,IAQIC,EAAI,EAPRR,EAQES,QAAQ,SAAAP,GAPRE,QAQQC,IAAI,GAAIG,EAAI,MAAON,GAP3BM,MAEFJ,QAQQC,IAAI,2BAObzB,EAAHiB,UAAAD,KAAG,WAPC,IAQMc,EAAK7B,KAAK8B,WAPhB9B,KAQKc,mBAPDe,EAQGhB,WAAab,KAAKC,cAAcQ,eAPrCT,KAQKa,UAAYgB,EAAGhB,UAPpBb,KAQK+B,MAAQF,EAAGE,MAPhB/B,KAQKQ,UAAYqB,EAAGrB,UAPpBR,KAQKC,cAAgB4B,EAAGG,OAPxBhC,KAQKiC,iBANLjC,KAQKkC,WAIRnC,EAAHiB,UAAAkB,QAAG,WALClC,KAMKc,mBALLd,KAMKa,aAJL,IAAK,IAKCsB,EAAOnC,KAAKC,cAAcC,KACvBkC,EAAI,EAAGA,EAAID,EAAMC,IAAK,CAJ7B,IAAK,IAKDC,KACKC,EAAI,EAAGA,EAAIH,EAAMG,IAAQD,EAAIE,KAAK,GAL3CvC,KAMKa,UAAU0B,KAAKF,GAJtBrC,KAMKQ,UAAYR,KAAKQ,WAAagC,UAAY,EAAIxC,KAAKQ,UALxDR,KAMK+B,MAAQ,EALb/B,KAMKyC,iBALLzC,KAMKyC,iBALLzC,KAMK0C,eAAe1C,KAAKa,WAJzBb,KAMK2C,UAAU3C,KAAK+B,QAQrBhC,EAAHiB,UAAAyB,eAAG,WAJC,IAAK,IAKDG,KACKR,EAAI,EAAGA,EAAIpC,KAAKa,UAAUgC,OAAQT,IALzC,IAAK,IAMIE,EAAI,EAAGA,EAAItC,KAAKa,UAAUuB,GAAGS,OAAQP,IACf,IANzBtC,KAMKa,UAAUuB,GAAGE,IALpBM,EAMeL,MAAMH,EAAGA,EAAGE,EAAGA,IAFpC,IAAIM,EAMeC,OAEjB,OADA7C,KAMKc,gBAAgBgC,QAAU,GACxB,EAbP,IAMMC,EAAUH,EAAeI,KAAKC,MAAMD,KAAKE,SAAWN,EAAeC,SACnEM,EAAyB,IAAhBH,KAAKE,SAAiB,GAAK,EAAI,EAL9ClD,KAMKc,gBAAgBsC,SAAWL,EALhC/C,KAMKc,gBAAgBgC,QAAUF,EAAeC,OAAS,EALvD7C,KAMKa,UAAUkC,EAAQX,GAAGW,EAAQT,GAAKa,EADzCnD,KAMK0C,eAAe1C,KAAKa,YAG1Bd,EAAHiB,UAAAqC,mBAAG,WAHC,OAIOrD,KAAKc,iBAGbf,EAAHiB,UAAAsC,YAAG,SAAA5C,GAACV,KACKC,cAAcS,MAAQV,KAAKW,iBAAiB4C,QAAQ7C,IAAU,EAAIA,EAAOV,KAAKC,cAAcS,MAAjGV,KACKwD,WAAWxD,KAAKC,gBAOtBF,EAAHiB,UAAAyC,YAAG,SAAAC,GAAC,OAAQA,GAKN,IACK,OAAH1D,KACKa,UAAYb,KAAK2D,SAAS3D,KAAKa,WAApC,MAKF,IACK,QAALb,KACKa,UAAYb,KAAK4D,UAAU5D,KAAKa,WAAnC,MAKF,IACK,KAAH,IACIgD,EAAQ7D,KAAK8D,eAAjBD,EACQ7D,KAAK+D,UAAUF,GAAvBA,EACQ7D,KAAK2D,SAASE,GAAtB7D,KACKa,UAAYb,KAAK+D,UAAUF,GAAhC,MAKF,IACK,OAAH,IACIG,EAAShE,KAAK8D,eAAlBE,EACShE,KAAK+D,UAAUC,GAAxBA,EACShE,KAAK4D,UAAUI,GAAxBhE,KACKa,UAAYb,KAAK+D,UAAUC,GAEpChE,KACK0C,eAAe1C,KAAKa,WAAzBb,KACKiC,iBAMNlC,EAAHiB,UAAAiD,UAAG,WAAC,OACOjE,KAAKC,eAMbF,EAAHiB,UAAAkD,aAAG,WAAC,OACOlE,KAAKW,kBAObZ,EAAHiB,UAAA0B,eAAG,SAAA7B,GACC,GADAb,KACKa,UAAYA,EAAbb,KACKC,cAAcQ,cAAe,CACpC,IACI0D,EAAenE,KAAK8B,WAAxBqC,EACatD,UAAYA,EAAzBb,KACKoE,UAAUD,KAOlBpE,EAAHiB,UAAAqD,aAAG,WAAC,OACOrE,KAAKa,WAObd,EAAHiB,UAAAwC,WAAG,SAAAxB,GAEC,GAFAhC,KACKsE,YAAYtC,GACbhC,KACKC,cAAcQ,cAAe,CACpC,IACIoB,EAAK7B,KAAK8B,WAAdD,EACGG,OAAShC,KAAKC,cAAjBD,KACKoE,UAAUvC,KAOlB9B,EAAHiB,UAAAuD,aAAG,WAAC,OACOvE,KAAKQ,WAObT,EAAHiB,UAAAwD,cAAG,SAAAzC,GACC,GADA/B,KACKQ,UAAYuB,EAAb/B,KACKC,cAAcQ,cAAe,CACpC,IACIoB,EAAK7B,KAAK8B,WAAdD,EACGrB,UAAYuB,EAAf/B,KACKoE,UAAUvC,KAOlB9B,EAAHiB,UAAAyD,gBAAG,WACC,GADAzE,KACKQ,UAAY,EAAbR,KACKC,cAAcQ,cAAe,CACpC,IACIoB,EAAK7B,KAAK8B,WAAdD,EACGrB,UAAY,EAAfR,KACKoE,UAAUvC,KAOlB9B,EAAHiB,UAAA0D,SAAG,WAAC,OACO1E,KAAK+B,OAObhC,EAAHiB,UAAA2B,UAAG,SAAAZ,GAMC,GANA/B,KACK+B,MAAQA,EACV/B,KACK+B,MAAQ/B,KAAKQ,WAAnBR,KACKwE,cAAcxE,KAAK+B,OAEtB/B,KACKC,cAAcQ,cAAe,CACpC,IACIoB,EAAK7B,KAAK8B,WAAdD,EACGE,MAAQA,EAAX/B,KACKoE,UAAUvC,KAOlB9B,EAAHiB,UAAA2D,YAAG,WACC,GADA3E,KACK+B,MAAQ,EAAT/B,KACKC,cAAcQ,cAAe,CACpC,IACIoB,EAAK7B,KAAK8B,WAAdD,EACGE,MAAQ,EAAX/B,KACKoE,UAAUvC,KAQlB9B,EAAHiB,UAAA+C,UAAG,SAAAa,GACC,OACOA,EAAE,GAAGxD,IAAI,SAACC,EAAGe,GAAM,OAAAwC,EAAExD,IAAI,SAAAC,GAAK,OAAAA,EAAEe,QAMxCrC,EAAHiB,UAAA8C,aAAG,WAIC,OADM9D,KAAKa,UAAUO,IAAI,SAAAC,GAAK,OAAAA,EAAED,IAAI,SAAAO,GAAK,OAAAA,OAS1C5B,EAAHiB,UAAA2C,SAAG,SAAAE,GAAC,IACIgB,KAAJhB,EACMjC,QAAQ,SAAAP,GAAZwD,EACQtC,KAAKlB,EAAED,IAAI,SAAAO,GAAK,OAAAA,OAG1B,IAAK,IADDmD,EAAY,EACZ/C,EAAQ/B,KAAK0E,YAAc,EACtBtC,EAAI,EAAGA,EAAIyC,EAAQhC,OAAQT,IAGlC,IAAK,IACIE,EAAI,EAAGA,EAAIuC,EAAQzC,GAAGS,OAAQP,IACrC,IACK,IADDyC,GAAS,EAEJC,EAAI1C,EAAI,EAAG0C,EAAIH,EAAQzC,GAAGS,SAA7BkC,EAAqCC,IACzC,GACsB,IADlBH,EACQzC,GAAGE,IAA8B,IAAlBuC,EAAQzC,GAAG4C,GAMtC,GAAIH,EACQzC,GAAGE,KAAOuC,EAAQzC,GAAG4C,IAAwB,IAAlBH,EAAQzC,GAAG4C,IAOlD,GACsB,IADlBH,EACQzC,GAAGE,IAA0B,IAAduC,EAAQzC,GAAG4C,GAApC,WARAH,EACQzC,GAAGE,IAAM,EAAjBuC,EACQzC,GAAG4C,GAAK,EAAhBjD,GACS8C,EAAQzC,GAAGE,GAApByC,GACS,EAATD,SAXAD,EACQzC,GAAGE,GAAKuC,EAAQzC,GAAG4C,GAA3BH,EACQzC,GAAG4C,GAAK,EAAhBF,IAoBR,OAFA9E,KACK2C,UAAUZ,GAAf/B,KACKc,gBAAgBmE,MAAQH,EACtBD,GAGR9E,EAAHiB,UAAAiB,cAAG,WAEC,GAAIjC,KADKc,iBAAmBd,KAAKc,gBAAgBgC,QAE/C9C,KADKc,gBAAgBoE,UAAW,MAAlC,CAQA,IAAK,IAFJC,GAAA,EACQ/C,EAAI,EAAGA,EAAIpC,KAAKa,UAAUgC,OAAQT,IAEzC,IADSE,EAAI,EAAGA,EAAItC,KAAKa,UAAUuB,GAAGS,OAAS,EAAGP,IAE5CtC,KADKa,UAAUuB,GAAGE,KAAOtC,KAAKa,UAAUuB,GAAGE,EAAI,KAEjD6C,GADQ,GAKd,GAAIA,EACFnF,KADKc,gBAAgBoE,UAAW,MAAlC,CAQA,IADS9C,EAAI,EAAGA,EAAIpC,KAAKa,UAAUgC,OAAS,EAAGT,IAE7C,IAAK,IADIE,EAAI,EAAGA,EAAItC,KAAKa,UAAUuB,GAAGS,OAAQP,IAExCtC,KADKa,UAAUuB,GAAGE,KAAOtC,KAAKa,UAAUuB,EAAI,GAAGE,KAEjD6C,GADQ,GAMZnF,KADKc,gBAAgBoE,UAAnBC,KAWLpF,EAAHiB,UAAA4C,UAAG,SAAAC,GAEC,IADIgB,KAEJhB,EADMjC,QAAQ,SAAAP,GAEZwD,EADQtC,KAAKlB,EAAED,IAAI,SAAAO,GAAK,OAAAA,OAK1B,IAAK,IAHDmD,EAAY,EACZ/C,EAAQ/B,KAAK0E,YAAc,EACtBtC,EAAI,EAAGA,EAAIyC,EAAQhC,OAAQT,IAKlC,IAAK,IADIE,EAAIuC,EAAQzC,GAAGS,OAAS,EAAGP,GAAK,EAAGA,IAG1C,IACK,IAHDyC,GAAS,EAEJC,EAAI1C,EAAI,EAAG0C,GAAK,IAEnBD,EAFsBC,IAG1B,GADsB,IAClBH,EADQzC,GAAGE,IAA8B,IAAlBuC,EAAQzC,GAAG4C,GAQtC,GAAIH,EADQzC,GAAGE,KAAOuC,EAAQzC,GAAG4C,IAAwB,IAAlBH,EAAQzC,GAAG4C,IASlD,GADsB,IAClBH,EADQzC,GAAGE,IAA0B,IAAduC,EAAQzC,GAAG4C,GAEpC,WARAH,EADQzC,GAAGE,IAAM,EAEjBuC,EADQzC,GAAG4C,GAAK,EAEhBD,GADS,EAETD,IACA/C,GADS8C,EAAQzC,GAAGE,QAVpBuC,EADQzC,GAAGE,GAAKuC,EAAQzC,GAAG4C,GAE3BH,EADQzC,GAAG4C,GAAK,EAEhBF,IAoBR,OAFA9E,KADK2C,UAAUZ,GAEf/B,KADKc,gBAAgBmE,MAAQH,EACtBD,GAOR9E,EAAHiB,UAAAsD,YAAG,SAAAtC,GAAA,IAAHoD,EAAApF,KAEI,GADKgC,EACL,CAAaqD,OAAOhF,KAAK2B,GACpBJ,QAAQ,SAAC0D,GAEZF,EADKnF,cAAcqF,GAAOtD,EAAOsD,OAOpCvF,EAAHiB,UAAAc,SAAG,WAEC,IADIqC,EAAoBoB,aAAaC,QAAQxF,KAAKY,cAElD,GADKuD,EAIH,IACEA,EADgBsB,KAAKC,MAAMvB,GAC3B,MAAAwB,SAHFxB,KAMF,OADOA,GAORpE,EAAHiB,UAAAoD,UAAG,SAAAP,GAEC0B,aADaK,QAAQ5F,KAAKY,aAAc6E,KAAKI,UAAUhC,OA1e3D,GA4eO9D,EAAP+F,aACEC,KAAMC,EAAAA,aAGPjG,EAADkG,eAAC,WAAA,UCteD,IAAIC,EAAcC,QAAQ,eAC1BC,EAAA,WAuCA,SAAAA,EARYC,EACAC,GADAtG,KAAZqG,YAAYA,EACArG,KAAZsG,IAAYA,EAdVtG,KAAFuG,cAJmBC,KAAM,OAAQC,MAAO,QAASC,GAAI,KAAMC,KAAM,QAM/D3G,KAAFa,aACEb,KAAFC,iBACED,KAAF4G,eAJkB,EAKhB5G,KAAF6G,cACE7G,KAAF+B,MAJkB,EAKhB/B,KAAFQ,UAJsB,SAftB6E,OAAAyB,eAAIV,EAAJpF,UAAA,UAAA+F,IAAA,WACI,OAAO/G,KAAKgH,SAMhBC,IAAA,SAJG3B,GAKCtF,KAJKgH,QAAU1B,EAKftF,KAJKqG,YAAY7C,WAAWxD,KAAKgC,yCAqBrCoE,EAAApF,UAAAkG,oBAAA,SANGC,GAOCnH,KANKoH,WAAWD,IAmBpBf,EAAApF,UAAAqG,SAAA,aAKAjB,EAAApF,UAAAsG,gBAAA,WACQtH,KAbKgH,SAcPhH,KAbKqG,YAAY7C,WAAWxD,KAAKgC,QAenChC,KAbKqG,YAAYtF,OAcjBf,KAbKa,UAAYb,KAAKqG,YAAYhC,eAclCrE,KAbKC,cAAgBD,KAAKqG,YAAYpC,YActCjE,KAbK4G,eAAgB,EAcrB5G,KAbK6G,WAAa7G,KAAKqG,YAAYhD,qBAcnCrD,KAbK+B,MAAQ/B,KAAKqG,YAAY3B,WAc9B1E,KAbKQ,UAAYR,KAAKqG,YAAY9B,eAclCvE,KAbKuH,UAAYvH,KAAKqG,YAAYnC,eAclClE,KAbKsG,IAAIkB,iBAkBbpB,EAAApF,UAAAyG,QAAA,WACIzH,KAfKqG,YAAYnE,UAgBjBlC,KAfKa,UAAYb,KAAKqG,YAAYhC,eAgBlCrE,KAfKC,cAAgBD,KAAKqG,YAAYpC,YAgBtCjE,KAfK4G,eAAgB,EAgBrB5G,KAfK6G,WAAa7G,KAAKqG,YAAYhD,qBAgBnCrD,KAfK+B,MAAQ/B,KAAKqG,YAAY3B,WAgB9B1E,KAfKQ,UAAYR,KAAKqG,YAAY9B,eAgBlCvE,KAfKsG,IAAIkB,iBAqBbpB,EAAApF,UAAAoG,WAAA,SAlBGD,GAmBC,GAAInH,KAlBKC,cAAcI,KAAM,CAmB3BkB,QAlBQC,IAAI2F,EAAMO,KAAMP,EAAMQ,KAqB9B,OApBUR,EAAMQ,IAAIC,eAqBlB,IAlBK,IAmBL,IAlBK,UAmBH5H,KAlBK6H,MAAM7H,KAAKuG,aAAaG,IAmB7B,MACF,IAlBK,IAmBL,IAlBK,YAmBH1G,KAlBK6H,MAAM7H,KAAKuG,aAAaI,MAmB7B,MACF,IAlBK,IAmBL,IAlBK,YAmBH3G,KAlBK6H,MAAM7H,KAAKuG,aAAaC,MAmB7B,MACF,IAlBK,IAmBL,IAlBK,aAmBHxG,KAlBK6H,MAAM7H,KAAKuG,aAAaE,UA4BvCL,EAAApF,UAAA8G,aAAA,WACI9H,KApBKqG,YAAY/C,YAAYtD,KAAKC,cAAcS,OAqBhDV,KApBKC,cAAgBD,KAAKqG,YAAYpC,aA0B1CmC,EAAApF,UAAA+G,QAAA,SAvBGC,GAwBKhI,KAvBKC,cAAcE,OAwBrBH,KAvBK6H,MAAMG,IA8BjB5B,EAAApF,UAAA6G,MAAA,SA3BGG,GACMhI,KAAK4G,gBA8BV5G,KA3BKqG,YAAY5C,YAAYuE,GA4B7BhI,KA3BKa,UAAYb,KAAKqG,YAAYhC,eA4BlCrE,KA3BK+B,MAAQ/B,KAAKqG,YAAY3B,WA4B9B1E,KA3BKQ,UAAYR,KAAKqG,YAAY9B,eA4BlCvE,KA3BKsG,IAAIkB,gBA4BTxH,KA3BKiI,aAgCT7B,EAAApF,UAAAiH,SAAA,WAAA,IAAA7C,EAAApF,KA3BQkI,EAAWlI,KAAKqG,YAAYhD,qBA+B5B6E,EA7BSjD,OAASiD,EAASjD,MAAQ,IA8BnCjF,KA7BK4G,eAAgB,EA8BrBuB,WA7BW,WA8BT/C,EA7BKiB,YAAY5D,iBA8BjB2C,EA7BKwB,eAAgB,EA8BrBxB,EA7BKkB,IAAIkB,iBACR,OAmCXpB,EAAApF,UAAAoH,WAAA,WAAA,IAAAhD,EAAApF,KA9BQqI,EAAmBrI,KAAKsI,GAAGC,cAgC/BrC,EA/BYmC,GAAKG,KAAK,SAAAC,GAgCpB,IA/BIC,EAAUD,EAAOE,UAAU,aAC3BC,EAAOC,SAASC,cAAc,KAgClCF,EA/BKG,SAAW,oBAAA3D,EAAyBrD,MA+B/C,OACM6G,EA/BKI,KAAO,SAASN,EAgCrBE,EA/BKK,UACJC,SAAM,SAAAC,SAxIb,GA4IO/C,EAAPN,aACEC,KAAMqD,EAAAA,UAAWC,OAgCjBC,SA/BU,gBAgCVC,SA/BU,kgFAqFVC,QA/BQ,yiuBAufRC,WA/BW1J,OAIZqG,EAADH,eAAC,WAAA,QAkCAF,KAAMhG,IACNgG,KAAM2D,EAAAA,qBA/BAtD,EAAPuD,gBAkCArB,KAjCSvC,KAAM6D,EAAAA,UAAWP,MAAM,UAkChCrH,SAjCa+D,KAAM8D,EAAAA,QAkCnB3C,sBAjC0BnB,KAAM+D,EAAAA,aAAcT,MAAM,kBAAmB,cC/qBvE,IAAAU,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAA3E,EAAA4E,EAAAC,MAAAjK,KAAAkK,YAAAlK,YACEoF,EAAF+E,WACMtC,OACSuC,SAAW,GAAKC,UAAW,GAAI3G,UAAW,OACzD,OAHC4G,EAADP,EAAAC,GAGAD,EAJA,CACCQ,EAAAA,qBAKDC,EAAA,kBAAA,aAAA,GACmCA,EAAnC1E,aACEC,KAAM0E,EAAAA,SAAUpB,OAKhBqB,SACEC,EAAAA,aACAC,EAAAA,aAEFC,cAJczE,GAKdqD,YACIqB,QAJSC,EAAAA,sBAKTC,SAJUjB,IAMdkB,SAJS7E,OAIVoE,EAADvE,eAAC,WAAA"}
